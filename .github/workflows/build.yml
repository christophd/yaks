# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: build

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.adoc'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'
  push:
    branches:
      - main
    paths-ignore:
      - '**.adoc'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set Up Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Cache Go modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Cache Maven modules
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    - name: Test
      run: |
        make check-licenses test package-artifacts

  test:
    runs-on: ubuntu-latest
    env:
      KAMEL_INSTALL_REGISTRY: "kind-registry:5000"
      KAMEL_INSTALL_REGISTRY_INSECURE: true
      YAKS_IMAGE_NAME: "kind-registry:5000/yaks"
      YAKS_IMAGE_VERSION: "latest"
    steps:
    - name: Set Up Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Cache Go modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Cache Maven modules
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-
    - name: Kind Cluster
      uses: container-tools/kind-action@v1
      #with:
      #  knative_serving: v0.19.0
      #  knative_kourier: v0.19.0
      #  knative_eventing: v0.19.0
    - name: Camel K Tools
      uses: container-tools/camel-k-action@v1
    - name: Build
      run: |
        make IMAGE_NAME=$YAKS_IMAGE_NAME VERSION=$YAKS_IMAGE_VERSION set-version-file build images-no-test
        sudo cp yaks /usr/local/bin/
        docker push $YAKS_IMAGE_NAME:$YAKS_IMAGE_VERSION
    - name: Install
      run: |
        kamel install --cluster-setup
        yaks install --operator-image $YAKS_IMAGE_NAME:$YAKS_IMAGE_VERSION
    - name: E2E Tests
      run: |
        # Eventually `yaks run examples` should work

        # For now:
        yaks run examples/camel
        yaks run examples/camel-k
        #yaks run examples/extension
        yaks run examples/http
        #yaks run examples/jdbc
        yaks run examples/jitpack
        #yaks run examples/kamelets
        #yaks run examples/knative
        yaks run examples/kubernetes
        yaks run examples/logging
        yaks run examples/namespace
        yaks run examples/openapi
        yaks run examples/openapi-server
        yaks run examples/run-scripts
        #yaks run examples/secrets
        yaks run examples/settings
        yaks run examples/test-group
        yaks run examples/helloworld.feature
        yaks run examples/selenium
